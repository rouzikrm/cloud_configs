akka=blocking-io-dispatcher { #END#\
  type = Dispatcher #END#\
  executor = "thread-pool-executor" #END#\
  thread-pool-executor { #END#\
    fixed-pool-size = 50 #END#\
  } #END#\
  throughput = 1 #END#\
} #END#\
akka { #END#\
  loggers = ["akka.event.slf4j.Slf4jLogger"] #END#\
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter" #END#\
 #END#\
  actor { #END#\
    provider = "cluster" #END#\
    warn-about-java-serializer-usage = false #END#\
  } #END#\
 #END#\
  remote { #END#\
    maximum-payload-bytes = 30000000 bytes #END#\
    netty.tcp{ #END#\
      message-frame-size =  30000000b #END#\
      send-buffer-size =  30000000b #END#\
      receive-buffer-size =  30000000b #END#\
      maximum-frame-size = 30000000b #END#\
    } #END#\
    event-stream = on #END#\
    fsm = on #END#\
    unhandled = on #END#\
    lifecycle = on #END#\
    autoreceive = on #END#\
    log-config-on-start = on #END#\
 #END#\
    log-remote-lifecycle-events = on #END#\
    log-sent-messages = on #END#\
    log-received-messages = on #END#\
    log-frame-size-exceeding = 1000b #END#\
  } #END#\
 #END#\
  cluster { #END#\
 #END#\
    seed.zookeeper { #END#\
      url = "zk:2181" #END#\
      path = "/akka/cluster/seed" #END#\
    } #END#\
    metrics.native-library-extract-folder = "/native" #END#\
    role-name = "backend" #END#\
     #END#\
  } #END#\
}
#ClusterSystem name that must be same for all member of clusters
app.cluster.name = core_clustername
app.cluster.role = backend
#app unique identifier to rezognize same apps log and monitoring data runnig on various machines
app.id = shanghai
#app name for use in all location that app name is needed
app.name = core
app.type = backend
app.remote.host = core-host
app.remote.port = 2555
cipher.key = theBrownFoxDecideHappily
mqtt.broker.url = tcp://mqtt:1883
redis.address = redis
blocking-io-dispatcher.executor = thread-pool-executor
blocking-io-dispatcher.thread-pool-executor.fixed-pool-size = 50
blocking-io-dispatcher.throughput = 1
blocking-io-dispatcher.type = Dispatcher
baseDirectory = /opt/ai
app.db.driver = com.mysql.cj.jdbc.Driver
app.db.url = jdbc:mysql://mysql:3306/product?useSSL=false&useUnicode=true&characterEncoding=UTF-8
app.db.username = root
app.db.password = root
app.db.hibernate.generate_statistics = true
app.db.hibernate.show_sql = true
app.db.hibernate.cache.cache.use_query_cache = true
app.db.hibernate.cache.use_second_level_cache = true
app.db.hibernate.hbm2ddl.auto = update
app.db.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
app.db.hikari.idle_timeout = 30000
app.db.hikari.max_pool_size = 10
app.db.hikari.min_idle = 10000
app.db.hikari.connection_timeout = 3000
app.db.hikari.pool_name = dataSourcePool
app.db.hikari.init_sql = SELECT 1
spring.cloud.config.allowOverride= true
spring.cloud.config.overrideNone= true
spring.cloud.config.overrideSystemProperties= false
