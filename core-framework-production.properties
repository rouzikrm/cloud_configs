akka=akka { \
  loggers = ["akka.event.slf4j.Slf4jLogger"] \
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter" \
 \
  actor { \
    provider = "cluster" \
    warn-about-java-serializer-usage = false \
  } \
 \
  remote { \
    maximum-payload-bytes = 30000000 bytes \
    netty.tcp{ \
      message-frame-size =  30000000b \
      send-buffer-size =  30000000b \
      receive-buffer-size =  30000000b \
      maximum-frame-size = 30000000b \
    } \
    event-stream = on \
    fsm = on \
    unhandled = on \
    lifecycle = on \
    autoreceive = on \
    log-config-on-start = on \
 \
    log-remote-lifecycle-events = off \
    log-sent-messages = on \
    log-received-messages = on \
    log-frame-size-exceeding = 1000b \
  } \
 \
  cluster { \
 \
    seed.zookeeper { \
      url = "192.168.1.5:2181" \
      path = "/akka/cluster/seed" \
    } \
    metrics.native-library-extract-folder = "/native" \
    role-name = "backend" \
     \
  } \
  extensions = ["akka.cluster.metrics.ClusterMetricsExtension"] \
}
akka.actor.provider = "cluster"
akka.logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
# auto downing is NOT safe for production deployments.
# you may want to use it during development, read more about it in the docs.
#auto-down-unreachable-after = 10s
# Sigar native library extract location during tests.
# Note: use per-jvm-instance folder when running multiple jvm on one host.
akka.remote.cluster.seed.metrics.native-library-extract-folder = "/native"
akka.remote.cluster.seed.zookeeper.path = "/akka/cluster/seed"
akka.remote.cluster.seed.zookeeper.url = "192.168.1.5:2181"
akka.remote.maximum-payload-bytes = "30000000 bytes"
# enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
akka.remote.netty.autoreceive = on
# enable DEBUG logging of subscription changes on the eventStream
akka.remote.netty.event-stream = on
# enable DEBUG logging of all LoggingFSMs for events, transitions and timers
akka.remote.netty.fsm = on
# enable DEBUG logging of actor lifecycle changes
akka.remote.netty.lifecycle = on
# Log the complete configuration at INFO level when the actor system is started.
# This is useful when you are uncertain of what configuration is used.
akka.remote.netty.log-config-on-start = on
# Logging of message types with payload size in bytes larger than
# this value. Maximum detected size per message type is logged once,
# with an increase threshold of 10%.
# By default this feature is turned off. Activate it by setting the property to
# a value in bytes, such as 1000b. Note that for all messages larger than this
# limit there will be extra performance and scalability cost.
akka.remote.netty.log-frame-size-exceeding = "1000b"
# If this is "on", Akka will log all inbound messages at DEBUG level,
# if off then they are not logged
akka.remote.netty.log-received-messages = on
akka.remote.netty.log-remote-lifecycle-events = on
# If this is "on", Akka will log all outbound messages at DEBUG level,
# if off then they are not logged
akka.remote.netty.log-sent-messages = on
akka.remote.netty.tcp.maximum-frame-size = "30000000b"
akka.remote.netty.tcp.message-frame-size = "30000000b"
akka.remote.netty.tcp.receive-buffer-size = "30000000b"
akka.remote.netty.tcp.send-buffer-size = "30000000b"
# enable DEBUG logging of unhandled messages
akka.remote.netty.unhandled = on
#ClusterSystem name that must be same for all member of clusters
app.cluster.name = core_clustername
app.cluster.role = backend
#app unique identifier to rezognize same apps log and monitoring data runnig on various machines
app.id = shanghai
#app name for use in all location that app name is needed
app.name = core
app.remote.host = core-host
app.remote.ports = 2555
cipher.key = "theBrownFoxDecideHappily"
mqtt.broker.url = "tcp://mqtt:1883"
redis.address = "redis"
# Enable metrics extension in akka-cluster-metrics.
extensions = [
  "akka.cluster.metrics.ClusterMetricsExtension"
]
loggers = [
  "akka.event.slf4j.Slf4jLogger"
]
